<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: ¦ÌVision V5.36.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: 1 1, 1, LIC=IK1BF-6GFLJ-74XS0-B8E6H-U5XIA-2TTDY
 
Tool Versions:
Toolchain:       MDK-ARM Plus  Version: 5.36.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.16
Assembler:       Armasm.exe V6.16
Linker/Locator:  ArmLink.exe V6.16
Library Manager: ArmAr.exe V6.16
Hex Converter:   FromElf.exe V6.16
CPU DLL:         
Dialog DLL:      
Target DLL:      CMSIS_AGDI_V8M.DLL V1.7.0.0
Dialog DLL:      TCM.DLL V1.53.0.0
 
<h2>Project:</h2>
D:\fpga\AC201-SA5Z50-CM33\TEST1\CM33\CM33.uvprojx
Project File Date:  07/20/2024

<h2>Output:</h2>
*** Using Compiler 'V6.16', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
compiling STAR_timer.c...
compiling STAR_spi.c...
compiling STAR_dualtimer.c...
compiling STAR_rcc.c...
compiling STAR_retarget.c...
compiling STAR_uart.c...
compiling STAR_adc.c...
compiling STAR_mpu.c...
compiling STAR_gpio.c...
compiling STAR_dma.c...
compiling STAR_i2c.c...
compiling system_ARMCM33.c...
compiling STAR_watchdog.c...
compiling delay.c...
compiling NVIC_it.c...
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'endBuff1_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(18): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff1##TYJ_SUFFIX[4] = {0x00, 0x00, 0x81, 0x7f};                         \
                           ^
<scratch space>(51): note: expanded from here
endBuff1_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(18): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff1##TYJ_SUFFIX[4] = {0x00, 0x00, 0x81, 0x7f};                         \
             ^
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'endBuff2_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(19): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff2##TYJ_SUFFIX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x7f}; \
                           ^
<scratch space>(52): note: expanded from here
endBuff2_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(19): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff2##TYJ_SUFFIX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x7f}; \
             ^
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'endBuff3_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(20): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff3##TYJ_SUFFIX[4] = {0x00, 0x00, 0x83, 0x7f};                         \
                           ^
<scratch space>(53): note: expanded from here
endBuff3_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(20): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char endBuff3##TYJ_SUFFIX[4] = {0x00, 0x00, 0x83, 0x7f};                         \
             ^
USR/scd_reg.c(82): warning: cast from 'volatile unsigned int *' to 'void *' drops volatile qualifier [-Wcast-qual]
SCD_REG_ADD(millisCnt, uint32_t)
^
USR/scd_reg.c(31): note: expanded from macro 'SCD_REG_ADD'
          (void *)&(TYJ_NAME), TYJ_##TYJ_TYPE \
                  ^
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'tyj_unit_struct_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(22): note: expanded from macro 'SCD_REG_BEGIN'
    const struct TYJ_UNIT_STRUCT tyj_unit_struct##TYJ_SUFFIX[] = {
                                 ^
<scratch space>(56): note: expanded from here
tyj_unit_struct_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(22): note: expanded from macro 'SCD_REG_BEGIN'
    const struct TYJ_UNIT_STRUCT tyj_unit_struct##TYJ_SUFFIX[] = {
          ^
USR/scd_reg.c(10): warning: In file included from...
./LIBS\scd_inc.h(37): warning: padding size of 'struct TYJ_UNIT_STRUCT' with 2 bytes to alignment boundary [-Wpadded]
   struct TYJ_UNIT_STRUCT
          ^
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'recBuff_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(16): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char recBuff##TYJ_SUFFIX[2][SCD_REVBUFF_SIZE];                                   \
                           ^
<scratch space>(49): note: expanded from here
recBuff_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(16): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char recBuff##TYJ_SUFFIX[2][SCD_REVBUFF_SIZE];                                   \
             ^
USR/scd_reg.c(81): warning: no previous extern declaration for non-static variable 'printBuff_1' [-Wmissing-variable-declarations]
SCD_REG_BEGIN(_1)
^
USR/scd_reg.c(17): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char printBuff##TYJ_SUFFIX[SCD_PRINTBUFF_SIZE];                                  \
                           ^
<scratch space>(50): note: expanded from here
printBuff_1
^
USR/scd_reg.c(81): note: declare 'static' if the variable is not intended to be used outside of this translation unit
USR/scd_reg.c(17): note: expanded from macro 'SCD_REG_BEGIN'
    volatile unsigned char printBuff##TYJ_SUFFIX[SCD_PRINTBUFF_SIZE];                                  \
             ^
8 warnings generated.
compiling scd_reg.c...
USR/main.c(14): warning: In file included from...
./LIBS\scd_inc.h(37): warning: padding size of 'struct TYJ_UNIT_STRUCT' with 2 bytes to alignment boundary [-Wpadded]
   struct TYJ_UNIT_STRUCT
          ^
1 warning generated.
compiling main.c...
assembling startup_ARMCM33.s...
LIBS/scd.c(31): warning: no previous extern declaration for non-static variable 'cz_ctype' [-Wmissing-variable-declarations]
const uint32_t cz_ctype[256] = {
               ^
LIBS/scd.c(31): note: declare 'static' if the variable is not intended to be used outside of this translation unit
const uint32_t cz_ctype[256] = {
      ^
LIBS/scd.c(517): warning: implicit conversion changes signedness: 'uint32_t' (aka 'unsigned int') to 'int32_t' (aka 'int') [-Wsign-conversion]
    int32_t intPart = _cz_strtoxl(chrIn, &nextCharPtr, 10, 0);
            ~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(522): warning: implicit conversion changes signedness: 'uint32_t' (aka 'unsigned int') to 'int32_t' (aka 'int') [-Wsign-conversion]
        int32_t decInt = _cz_strtoxl(chrIn, &nextCharPtr, 10, 0);
                ~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(530): warning: implicit conversion changes signedness: 'uint32_t' (aka 'unsigned int') to 'int' [-Wsign-conversion]
        ePart = _cz_strtoxl(chrIn, &nextCharPtr, 10, 0);
              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(534): warning: implicit conversion from 'int32_t' (aka 'int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
        ret = intPart + decPart;
              ^~~~~~~ ~
LIBS/scd.c(538): warning: implicit conversion from 'int32_t' (aka 'int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
        ret = -decPart - intPart;
                       ~ ^~~~~~~
LIBS/scd.c(552): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        *xtemp = atof_tyj((const char *)paraPtr);
                                        ^
LIBS/scd.c(557): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        *xtemp = cz_atol((const char *)paraPtr);
                                       ^
LIBS/scd.c(557): warning: implicit conversion loses integer precision: 'int32_t' (aka 'int') to 'uint16_t' (aka 'unsigned short') [-Wimplicit-int-conversion]
        *xtemp = cz_atol((const char *)paraPtr);
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(562): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        *xtemp = cz_atol((const char *)paraPtr);
                                       ^
LIBS/scd.c(562): warning: implicit conversion loses integer precision: 'int32_t' (aka 'int') to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
        *xtemp = cz_atol((const char *)paraPtr);
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(567): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        *xtemp = cz_atol((const char *)paraPtr);
                                       ^
LIBS/scd.c(567): warning: implicit conversion changes signedness: 'int32_t' (aka 'int') to 'uint32_t' (aka 'unsigned int') [-Wsign-conversion]
        *xtemp = cz_atol((const char *)paraPtr);
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(572): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        *xtemp = cz_atol((const char *)paraPtr);
                                       ^
LIBS/scd.c(586): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        int varNum = cz_atol((const char *)paraPtr);
                                           ^
LIBS/scd.c(589): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
            scd->structToSendTab[targetNum] = varNum;
                                            ~ ^~~~~~
LIBS/scd.c(601): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
    int p_num = cz_atol((const char *)paraPtr);
                                      ^
LIBS/scd.c(604): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
        scd->sco_protocol_num_next = p_num;
                                   ~ ^~~~~
LIBS/scd.c(614): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
    int p_num = cz_atol((const char *)paraPtr);
                                      ^
LIBS/scd.c(623): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
    scd->dumpNumCnt = p_num;
                    ~ ^~~~~
LIBS/scd.c(631): warning: implicit conversion changes signedness: 'const int16_t' (aka 'const short') to 'unsigned int' [-Wsign-conversion]
    uint16_t judgeType = (scd->_unit_struct[targetNum]._type) & 0xffu;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~  ~
LIBS/scd.c(635): warning: cast from 'volatile unsigned char *' to 'const char *' drops volatile qualifier [-Wcast-qual]
        int para = cz_atol((const char *)paraPtr);
                                         ^
LIBS/scd.c(774): warning: implicit conversion loses integer precision: 'uint16_t' (aka 'unsigned short') to 'unsigned char' [-Wimplicit-int-conversion]
        recBuff[scd->bufNum][scd->bytesRec++] = data;
                                              ~ ^~~~
LIBS/scd.c(12): warning: In file included from...
./LIBS/scd_inc.h(37): warning: padding size of 'struct TYJ_UNIT_STRUCT' with 2 bytes to alignment boundary [-Wpadded]
   struct TYJ_UNIT_STRUCT
          ^
LIBS/scd.c(829): warning: implicit conversion changes signedness: 'const int16_t' (aka 'const short') to 'unsigned int' [-Wsign-conversion]
                uint16_t judgeType = (scd->_unit_struct[scd->structToSendTab[scd->structToSend - 1]]._type) & 0xffu;
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~  ~
LIBS/scd.c(839): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = *tempPtr;
                                  ~ ^~~~~~~~
LIBS/scd.c(844): warning: implicit conversion from 'int32_t' (aka 'int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = *tempPtr;
                                  ~ ^~~~~~~~
LIBS/scd.c(853): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = (uint32_t)tempCommonPtr;
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(862): warning: cast from 'volatile float *' to 'void *' drops volatile qualifier [-Wcast-qual]
            uint16_t *tempPtr = (uint16_t *)(void *)&(scd->tempBuff);
                                                    ^
LIBS/scd.c(940): warning: implicit conversion changes signedness: 'const int16_t' (aka 'const short') to 'unsigned int' [-Wsign-conversion]
                uint16_t judgeType = (scd->_unit_struct[scd->structToSend2 - 1]._type) & 0xffu;
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~  ~
LIBS/scd.c(950): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = *tempPtr;
                                  ~ ^~~~~~~~
LIBS/scd.c(955): warning: implicit conversion from 'int32_t' (aka 'int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = *tempPtr;
                                  ~ ^~~~~~~~
LIBS/scd.c(964): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = (uint32_t)tempCommonPtr;
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(973): warning: cast from 'volatile float *' to 'void *' drops volatile qualifier [-Wcast-qual]
            uint16_t *tempPtr = (uint16_t *)(void *)&(scd->tempBuff);
                                                    ^
LIBS/scd.c(1100): warning: implicit conversion changes signedness: 'const int16_t' (aka 'const short') to 'unsigned int' [-Wsign-conversion]
                uint16_t judgeType = (scd->_unit_struct[scd->dumpTarget]._type) & 0xffu;
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~  ~
LIBS/scd.c(1110): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = tempPtr[scd->structToSend3];
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(1115): warning: implicit conversion from 'int32_t' (aka 'int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = tempPtr[scd->structToSend3];
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(1124): warning: implicit conversion from 'uint32_t' (aka 'unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                    scd->tempBuff = (uint32_t)tempCommonPtr;
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~~
LIBS/scd.c(1133): warning: cast from 'volatile float *' to 'void *' drops volatile qualifier [-Wcast-qual]
            uint16_t *tempPtr = (uint16_t *)(void *)&(scd->tempBuff);
                                                    ^
LIBS/scd.c(1248): warning: implicit conversion loses integer precision: 'int' to 'int16_t' (aka 'short') [-Wimplicit-int-conversion]
    scd->isPrintBusyFlg = chrCnt;
                        ~ ^~~~~~
40 warnings generated.
compiling scd.c...
linking...
Program Size: Code=3676 RO-data=3376 RW-data=20 ZI-data=4436  
After Build - User command #1: fromelf.exe D:\fpga\AC201-SA5Z50-CM33\TEST1\CM33\Objects\CM33.axf -c -d -e -s --output toFpga.lst
After Build - User command #2: fromelf.exe D:\fpga\AC201-SA5Z50-CM33\TEST1\CM33\Objects\CM33.axf --bin -o toFpga.bin
".\Objects\CM33.axf" - 0 Error(s), 49 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM.CMSIS.5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)

<h2>Collection of Component include folders:</h2>
  C:\Users\t\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM33\Include

<h2>Collection of Component Files used:</h2>
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
